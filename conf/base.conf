log_interval: 10

# refer to https://pytorch.org/docs/stable/tensor_attributes.html?highlight=memory_format#torch.torch.memory_format
# highly recommend use 'channels_last' on NVIDIA Tasla A100, V100 and RTX 3090 with typical CNNs
memory_format: "channels_last" # select from 'contiguous_format' | 'channels_last' | 'preserve_format'

use_amp: false # if true, it will train in automatic mixed precision mode

auto_resume: true # if true, it will automatically load the checkpoint in the output directory and continue to train

sync_batchnorm: false # if true, it will convert all the batchnorm layers into torch.nn.SyncBatchNorm

accmulated_steps: 1

set_reproducible: false # if true, the training will be set to reproducible (refer to https://pytorch.org/docs/stable/notes/randomness.html)
                        # else torch.backends.cudnn.benchmark will be set to True for largest throughput

n_repeats: 1 # the number of repeated runs

search: false

tta_strategy {
    type_: None
}

data {
    type_: imagenet_c
    pass_through: false
    mixed: false

    image_size: 224
    num_classes: 1000

    root: data/imagenet-c-tfrec

    corruptions: [noise, blur, weather, digital]

    severities: [1,2,3,4,5]

    mean: [0.485, 0.456, 0.406]
    std: [0.229, 0.224, 0.225]

    batch_size: 64
    num_workers: 8

    n_samples: 50000

    dali_gpu: false

    percent: 1.0
}

model {
    type_: resnet50
    pretrained: true
}

criterion {
    type_: CrossEntropyLoss
}